#!/usr/bin/env python

import sys
import getopt
import os
import tempfile
import atexit

symbiotic_dir = '..' # hmm, just guess, we'll set it in argv

def changedir(path):
    try:
        os.chdir(path)
    except OSError as e:
        sys.stderr.write('Failed chdir to {0}: {1}\n'.format(path, e.strerror))
        sys.exit(1)

def rmf(path):
    path = os.path.abspath(path)
    for f in os.listdir(path):
        os.unlink(f)

    os.rmdir(path)

def changetotmp():
    d = tempfile.mkdtemp(prefix='symbiotic-tmp', dir=os.curdir)
    changedir(d)
    atexit.register(lambda d: os.chdir('..') or rmf(d), d)

    return d


def print_versions():
    print('### VERSIONS')
    print('...')

def usage():
    print(
"""
symbiotic OPTS benchmark

OPTS can be:

    --help          print this help message
    --versions      query for versions of tools and libraries
                    and print them
    --use-dir=dir   use this directory for temporal files. If
                    this switch is given with no directory, then
                    this script will create one.
""")

def handle_options():
    try:
        opts, args = getopt.getopt(sys.argv[1:], '',
                                   ['help', 'versions',
                                   'use-dir=', 'symbiotic-dir='])
    except getopt.GetoptError as e:
        sys.stderr.write('{0}\n'.format(str(e)))
        usage()
        sys.exit(2)

    for opt, arg in opts:
        if opt == '--help':
            usage()
        elif opt == '--versions':
            print_versions()
        elif opt == '--symbiotic-dir':
            symbiotic_dir = arg
        elif opt == '--use-dir':
            if arg:
                changedir(arg)
            else:
                changetotmp()
        else:
            sys.stderr.write('Unknown switch: {0} {1}\n'.format(opt, arg))
            usage()
            sys.exit(2)

    if not args:
        usage()
        sys.exit(2)

    return args

if __name__ == "__main__":
    benchmarks = handle_options()
    for b in benchmarks:
        print('bench: ' + b)
